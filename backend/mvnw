#!/usr/bin/env sh

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# -----------------------------------------------------------------------------
# Maven Start Up Script
#
# Required ENV vars:
# ------------------
#   JAVA_HOME - location of a JDK home dir
#
# Optional ENV vars
# -----------------
#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
#     e.g. -Xms256m -Xmx512m
#   MAVEN_SKIP_RC - flag to disable loading of /etc/mavenrc and ~/.mavenrc
# -----------------------------------------------------------------------------

# Verify that Maven is present
if [ -z "$MAVEN_HOME" ]; then
  MAVEN_OPTS_SAVED="$MAVEN_OPTS"
  # shellcheck disable=SC2123
  MAVEN_OPTS=
  # shellcheck disable=SC2034
  MAVEN_SKIP_RC=1
  # shellcheck source=/dev/null
  . "$(dirname "$0")/.mvn/wrapper/maven-wrapper.properties"
  MAVEN_OPTS="$MAVEN_OPTS_SAVED"
fi

# shellcheck source=/dev/null
. "$(dirname "$0")/.mvn/wrapper/maven-wrapper.properties"

MAVEN_PROJECT_ROOT_DIR_PATH="$(cd "$(dirname "$0")" && pwd)"
MAVEN_PROJECT_SETTINGS_PATH="${MAVEN_PROJECT_ROOT_DIR_PATH}/.mvn/wrapper/settings.xml"

if [ -n "$MAVEN_PROJECT_SETTINGS_PATH" ] && [ -f "$MAVEN_PROJECT_SETTINGS_PATH" ]; then
  MAVEN_PROJECT_SETTINGS_ARGS="--settings "${MAVEN_PROJECT_SETTINGS_PATH}""
else
  MAVEN_PROJECT_SETTINGS_ARGS=""
fi

MAVEN_WRAPPER_JAR_PATH="${MAVEN_PROJECT_ROOT_DIR_PATH}/.mvn/wrapper/maven-wrapper.jar"
MAVEN_WRAPPER_DOWNLOAD_URL="$(grep 'distributionUrl' "${MAVEN_PROJECT_ROOT_DIR_PATH}/.mvn/wrapper/maven-wrapper.properties" | cut -d'=' -f2)"

if [ -z "$MAVEN_WRAPPER_DOWNLOAD_URL" ]; then
  echo "Could not find maven wrapper download url in .mvn/wrapper/maven-wrapper.properties"
  exit 1
fi

if [ ! -f "$MAVEN_WRAPPER_JAR_PATH" ]; then
  echo "Downloading Maven Wrapper from ${MAVEN_WRAPPER_DOWNLOAD_URL}"
  if command -v curl >/dev/null 2>&1; then
    curl -L -o "$MAVEN_WRAPPER_JAR_PATH" "$MAVEN_WRAPPER_DOWNLOAD_URL"
  elif command -v wget >/dev/null 2>&1; then
    wget -O "$MAVEN_WRAPPER_JAR_PATH" "$MAVEN_WRAPPER_DOWNLOAD_URL"
  else
    echo "Could not find curl or wget. Please install one of these and try again."
    exit 1
  fi
fi

# If MAVEN_HOME is not set, then automatically download and install Maven
if [ -z "$MAVEN_HOME" ]; then
  MAVEN_TARGET_DIR="${MAVEN_PROJECT_ROOT_DIR_PATH}/.mvn/wrapper/maven"
  MAVEN_TARGET_ZIP="${MAVEN_TARGET_DIR}/maven.zip"
  MAVEN_TARGET_URL="$(grep 'distributionUrl' "${MAVEN_PROJECT_ROOT_DIR_PATH}/.mvn/wrapper/maven-wrapper.properties" | cut -d'=' -f2)"

  if [ ! -d "$MAVEN_TARGET_DIR" ]; then
    echo "Downloading Maven from ${MAVEN_TARGET_URL}"
    mkdir -p "$MAVEN_TARGET_DIR"
    if command -v curl >/dev/null 2>&1; then
      curl -L -o "$MAVEN_TARGET_ZIP" "$MAVEN_TARGET_URL"
    elif command -v wget >/dev/null 2>&1; then
      wget -O "$MAVEN_TARGET_ZIP" "$MAVEN_TARGET_URL"
    else
      echo "Could not find curl or wget. Please install one of these and try again."
      exit 1
    fi
    unzip -q "$MAVEN_TARGET_ZIP" -d "$MAVEN_TARGET_DIR"
    rm "$MAVEN_TARGET_ZIP"
    MAVEN_HOME="$(find "$MAVEN_TARGET_DIR" -mindepth 1 -maxdepth 1 -type d)"
  else
    MAVEN_HOME="$(find "$MAVEN_TARGET_DIR" -mindepth 1 -maxdepth 1 -type d)"
  fi
fi

export MAVEN_HOME

# shellcheck disable=SC2086
exec "$MAVEN_HOME/bin/mvn" ${MAVEN_PROJECT_SETTINGS_ARGS} "$@"
